package chapter10;

import java.io.File;
import java.util.Arrays;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;

/*================================================
 * [1] 컨트롤러 클래스 선언
 *================================================*/
@Controller // ★ 스프링 MVC 컨트롤러 선언
public class StudentController {

	@Autowired // ★ 스프링이 자동으로 서비스 객체 주입
	private StudentService service;

	/*------------------------------------------------
	 * [2] 학생 목록 조회 처리
	 *------------------------------------------------*/
	@GetMapping({ "/student/index.do", "/student" }) // → 두 가지 URL 패턴 매핑
	public String index(Model model, StudentVO vo) {
		// → 디버깅용: 전공 검색 조건 출력
		System.out.println(Arrays.toString(vo.getSearchMajor()));

		// → 서비스 계층에 검색 요청하고 결과를 모델에 저장
		model.addAttribute("map", service.list(vo));

		// → student/index.jsp 뷰 페이지로 포워딩
		return "student/index";
	}

	/*------------------------------------------------
	 * [3] 학생 등록 폼 페이지 처리
	 *------------------------------------------------*/
	@GetMapping("/student/write.do") // → 등록 폼 요청 URL 매핑
	public void write() {
		// → 메서드가 void이므로 요청 URL과 동일한 뷰로 자동 포워딩
		// → 즉, /WEB-INF/views/student/write.jsp로 이동
	}

	/*------------------------------------------------
	 * [4] 학생 등록 처리
	 *------------------------------------------------*/
	@PostMapping("/student/regist.do") // → 등록 처리 POST 요청 매핑
	public String regist(Model model, StudentVO vo, @RequestParam MultipartFile filename,
				HttpServletRequest req) {
		if (!filename.isEmpty()) {
			try {
				String org_filename = filename.getOriginalFilename();
				String real_filename = System.currentTimeMillis()
						+ org_filename.substring(org_filename.lastIndexOf("."));
				// 저장
				File file = new File(req.getRealPath("/upload"));
				
			} catch (Exception e) {
				e.printStackTrace();
			}
		}
		// → 서비스 계층에 학생 정보 등록 요청
		service.insert(vo);

		// → 등록 완료 메시지 설정
		model.addAttribute("msg", "등록 완료");

		// → 목록 페이지로 리다이렉트할 URL 설정
		model.addAttribute("url", "index.do");

		// → 메시지를 보여줄 알림 페이지로 이동
		return "common/alert";
	}
}